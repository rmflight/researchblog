{
  "hash": "bd9175ba6f1402bb1e07593407e2f0fc",
  "result": {
    "markdown": "---\ntitle: \"Highlighting a Row of A ComplexHeatmap\"\nsubtitle: |\n  A simple way to highlight or bring attention to a row or column in a ComplexHeatmap.\ndate: 03-26-2021\ncategories: [random-code-snippets, heatmap, visualization]\nbibliography: refs.bib\neditor_options: \n  chunk_output_type: console\n---\n\n\nThe ComplexHeatmap Bioconductor package [@complexheatmapPub; @complexheatmapPackage; @complexheatmapRef] has become my goto for visualizing sample-sample correlation heatmaps, which I use a lot.\nRecently, I had a report where I wanted to highlight a particular row of the heatmap.\nThere is not an **easy** way that I could find to add something that wraps around a particular column.\nHowever, you can indicate that there is a grouping in the heatmap, and use that grouping to separate a sample or samples from the others.\n\nLets do an example:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ComplexHeatmap)\nset.seed(123)\nnr1 = 4; nr2 = 8; nr3 = 6; nr = nr1 + nr2 + nr3\nnc1 = 6; nc2 = 8; nc3 = 10; nc = nc1 + nc2 + nc3\nmat = cbind(rbind(matrix(rnorm(nr1*nc1, mean = 1,   sd = 0.5), nr = nr1),\n          matrix(rnorm(nr2*nc1, mean = 0,   sd = 0.5), nr = nr2),\n          matrix(rnorm(nr3*nc1, mean = 0,   sd = 0.5), nr = nr3)),\n    rbind(matrix(rnorm(nr1*nc2, mean = 0,   sd = 0.5), nr = nr1),\n          matrix(rnorm(nr2*nc2, mean = 1,   sd = 0.5), nr = nr2),\n          matrix(rnorm(nr3*nc2, mean = 0,   sd = 0.5), nr = nr3)),\n    rbind(matrix(rnorm(nr1*nc3, mean = 0.5, sd = 0.5), nr = nr1),\n          matrix(rnorm(nr2*nc3, mean = 0.5, sd = 0.5), nr = nr2),\n          matrix(rnorm(nr3*nc3, mean = 1,   sd = 0.5), nr = nr3))\n   )\nmat = mat[sample(nr, nr), sample(nc, nc)] # random shuffle rows and columns\nrownames(mat) = paste0(\"row\", seq_len(nr))\ncolnames(mat) = paste0(\"column\", seq_len(nc))\n\nHeatmap(mat, cluster_rows = FALSE, cluster_columns = FALSE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/create_heatmap-1.png){width=672}\n:::\n:::\n\n\nNow, lets suppose we just want to highlight **row2**.\n\nWe create a data.frame with a factor to represent the grouping:\n\n\n::: {.cell preview='true'}\n\n```{.r .cell-code}\nwhich_row2 = which(grepl(\"row2\", rownames(mat)))\nsplit = data.frame(x = c(rep(\"A\", which_row2 - 1), \"B\",\n                   rep(\"C\", nrow(mat) - which_row2)))\nHeatmap(mat, cluster_rows = FALSE, cluster_columns = FALSE,\n        row_split = split,\n        row_title = NULL)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/highlight_row2-1.png){width=672}\n:::\n:::\n\n\nVoila! **row2** is separated from the others to draw attention to it.\nIt's not perfect, but hopefully it's useful to others.\nNote, that you can't use clustering with this method.\nIf you have actual dendrograms to display, this will fail, because ComplexHeatmap expects you to use a numeric argument to tell the cut height for dendrograms for splitting [@complexheatmapSplit].\nTherefore, if you have dendrograms, reorder your columns and rows according to the dendrogram **first** and then add the splitting information and keep the clustering off.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}