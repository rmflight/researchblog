{
  "hash": "2d31bae3892cf26c74629ddddaf9444c",
  "result": {
    "markdown": "---\ntitle: \"Heatmap Colormaps!\"\nsubtitle: |\n  Examples of good colormaps to use for heatmaps, both divergent and incremental.\ndate: 2022-01-31\ncategories: [colormaps, visualization, heatmap, random-code-snippets]\n---\n\n\n## Normal Incrementing Data\n\nNine times out of ten, you probably need just one of the `{viridis}` colormaps for values that are increasing in one direction.\nFor example, correlation values that are all positive, or abundances from RNA-Seq, etc.\nIf you want to use them with `{ComplexHeatmap}`, you do so like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# correlation example for 0 - 1\n# imagine cor_vals is a set of correlation values\nlibrary(ComplexHeatmap)\ncor_start = 0\ncor_end = 1\nn_break = 20\nviridis_map = circlize::colorRamp2(seq(cor_start, \n                                       cor_end, \n                                       length.out = n_break),\n                                   viridis::viridis(n_break))\n\nHeatmap(cor_vals, \n        col = viridis_map, \n        ...)\n```\n:::\n\n\n## Divergent Data\n\nIn this case, you have values where a **central** value is a natural point that you want to highlight things **above** and **below** that value.\nExamples include correlations that include negative and positive correlations, log-fold-changes above and below zero.\nIn this case, I prefer the `{scico}` package with the `vik` colormap.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor_start = -1\ncor_end = 1\nn_break = 20\n\nscico_map = circlize::colorRamp2(seq(cor_start\n                                     cor_end,\n                                     length.out = n_break),\n                                 scico::scico(n_break, \n                                              palette = \"vik\"))\n\nHeatmap(cor_vals, \n        col = scico_map,\n        ...)\n```\n:::\n\n\n## Other Colormaps?\n\nDo you have other suggestions for colormaps, both incremental and divergent?\nPlease let me know in the comments!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}