{
  "hash": "3f983d76ac266839b9156abb37a335a2",
  "result": {
    "markdown": "---\ntitle: \"Coloring Dendrogram Edges with ggraph\"\nsubtitle: |\n  Here is how I got edges colored in a dendrogram with ggraph. Use \"node.\" in front of the node data column you want.\ndate: 08-03-2021\ncategories: [random-code-snippets, visualization, graphing, dendrogram]\nbibliography: refs.bib\n---\n\n\nI wanted to color the dendrogram edges according to their class in ggraph, and I was getting stuck because of something that isn't explicitly mentioned in the documentation, but is implied.\n**You must use \"node.\" to access the data from the Node Data in the call to `aes(...)`**.\n\nLets set it up.\nWe will borrow from the \"Edges\" vignette in the ggraph package [@ggraphEdgesVignette].\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggraph)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ggplot2\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidygraph)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'tidygraph'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:stats':\n\n    filter\n```\n:::\n\n```{.r .cell-code}\nlibrary(purrr)\nlibrary(rlang)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'rlang'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:purrr':\n\n    %@%, as_function, flatten, flatten_chr, flatten_dbl, flatten_int,\n    flatten_lgl, flatten_raw, invoke, splice\n```\n:::\n\n```{.r .cell-code}\nset_graph_style(plot_margin = margin(1,1,1,1))\nhierarchy <- as_tbl_graph(hclust(dist(iris[, 1:4]))) %>% \n  mutate(Class = map_bfs_back_chr(node_is_root(), .f = function(node, path, ...) {\n    if (leaf[node]) {\n      as.character(iris$Species[as.integer(label[node])])\n    } else {\n      species <- unique(unlist(path$result))\n      if (length(species) == 1) {\n        species\n      } else {\n        NA_character_\n      }\n    }\n  }))\n\nhierarchy\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tbl_graph: 299 nodes and 298 edges\n#\n# A rooted tree\n#\n# Node Data: 299 × 5 (active)\n  height leaf  label members Class    \n   <dbl> <lgl> <chr>   <int> <chr>    \n1  0     TRUE  \"108\"       1 virginica\n2  0     TRUE  \"131\"       1 virginica\n3  0.265 FALSE \"\"          2 virginica\n4  0     TRUE  \"103\"       1 virginica\n5  0     TRUE  \"126\"       1 virginica\n6  0     TRUE  \"130\"       1 virginica\n# … with 293 more rows\n#\n# Edge Data: 298 × 2\n   from    to\n  <int> <int>\n1     3     1\n2     3     2\n3     7     5\n# … with 295 more rows\n```\n:::\n:::\n\n\nAnd with this, we can create a dendrogram.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(hierarchy, \"dendrogram\", height = height) +\n  geom_edge_elbow()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` in the `default_aes` field and elsewhere instead.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot_dendrogram-1.png){width=672}\n:::\n:::\n\n\nNice!\nBut what if we want the leaves colored by which \"Class\" they belong to?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(hierarchy, \"dendrogram\", height = height) +\n  geom_edge_elbow2(aes(color = node.Class))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot_class-1.png){width=672}\n:::\n:::\n\n\nNote the differences in this function call compared to the previous:\n\n1. Using `geom_edge_elbow2` instead of `geom_edge_elbow`\n1. Using `node.Class`, not just `Class`. \n\nThe second point is really important!\nWhen you look at the `hierarchy` object printed above, the `Class` bit is part of the `Node Data`, which gets identified by `ggraph` by the prefix \"node.\".\n\nIf we don't use `node.Class`, here is the error:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(hierarchy, \"dendrogram\", height = height) +\n  geom_edge_elbow2(aes(color = Class))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `geom_edge_elbow2()`:\n! Problem while computing aesthetics.\nℹ Error occurred in the 1st layer.\nCaused by error in `FUN()`:\n! object 'Class' not found\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}